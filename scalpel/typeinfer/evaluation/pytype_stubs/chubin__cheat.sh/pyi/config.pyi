# (generated with --quick)

import __future__
from typing import Any, Dict, Iterator, List, Tuple, Union

CONFIG: Config
_CONFIG: Dict[str, Union[int, str, List[Union[str, Tuple[str, str]]]]]
_CONF_FILE_MYDIR: str
_CONF_FILE_WORKDIR: str
_ENV_VAR_PREFIX: str
_MYDIR: str
_WORKDIR: str
doctest: module
os: module
print_function: __future__._Feature

class Config(dict):
    __doc__: str
    def __init__(self, *args, **kwargs) -> None: ...
    def __setitem__(self, key, val) -> None: ...
    def _absolute_path(self, val) -> Any: ...
    def update(self, *args, **kwargs) -> None: ...

def _config_locations() -> Tuple[str, str, str]: ...
def _get_nested(data, key) -> Any: ...
def _load_config_from_environ(config) -> Dict[Any, Union[int, str]]: ...
def _load_config_from_file(default_config, filename) -> dict: ...
def get_all_styles() -> Iterator[str]: ...
