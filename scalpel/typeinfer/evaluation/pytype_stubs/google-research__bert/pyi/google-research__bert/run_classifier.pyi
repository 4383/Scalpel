# (generated with --quick)

import __future__
from typing import Any, Callable, List, NoReturn, Tuple

FLAGS: Any
absolute_import: __future__._Feature
collections: module
csv: module
division: __future__._Feature
flags: Any
modeling: Any
optimization: Any
os: module
print_function: __future__._Feature
tf: Any
tokenization: Any

class ColaProcessor(DataProcessor):
    __doc__: str
    def _create_examples(self, lines, set_type) -> List[InputExample]: ...
    def get_dev_examples(self, data_dir) -> List[InputExample]: ...
    def get_labels(self) -> List[str]: ...
    def get_test_examples(self, data_dir) -> List[InputExample]: ...
    def get_train_examples(self, data_dir) -> List[InputExample]: ...

class DataProcessor:
    __doc__: str
    @classmethod
    def _read_tsv(cls, input_file, quotechar = ...) -> List[List[str]]: ...
    def get_dev_examples(self, data_dir) -> NoReturn: ...
    def get_labels(self) -> NoReturn: ...
    def get_test_examples(self, data_dir) -> NoReturn: ...
    def get_train_examples(self, data_dir) -> NoReturn: ...

class InputExample:
    __doc__: str
    guid: Any
    label: Any
    text_a: Any
    text_b: Any
    def __init__(self, guid, text_a, text_b = ..., label = ...) -> None: ...

class InputFeatures:
    __doc__: str
    input_ids: Any
    input_mask: Any
    is_real_example: Any
    label_id: Any
    segment_ids: Any
    def __init__(self, input_ids, input_mask, segment_ids, label_id, is_real_example = ...) -> None: ...

class MnliProcessor(DataProcessor):
    __doc__: str
    def _create_examples(self, lines, set_type) -> List[InputExample]: ...
    def get_dev_examples(self, data_dir) -> List[InputExample]: ...
    def get_labels(self) -> List[str]: ...
    def get_test_examples(self, data_dir) -> List[InputExample]: ...
    def get_train_examples(self, data_dir) -> List[InputExample]: ...

class MrpcProcessor(DataProcessor):
    __doc__: str
    def _create_examples(self, lines, set_type) -> List[InputExample]: ...
    def get_dev_examples(self, data_dir) -> List[InputExample]: ...
    def get_labels(self) -> List[str]: ...
    def get_test_examples(self, data_dir) -> List[InputExample]: ...
    def get_train_examples(self, data_dir) -> List[InputExample]: ...

class PaddingInputExample:
    __doc__: str

class XnliProcessor(DataProcessor):
    __doc__: str
    language: str
    def __init__(self) -> None: ...
    def get_dev_examples(self, data_dir) -> List[InputExample]: ...
    def get_labels(self) -> List[str]: ...
    def get_train_examples(self, data_dir) -> List[InputExample]: ...

def _truncate_seq_pair(tokens_a, tokens_b, max_length) -> None: ...
def convert_examples_to_features(examples, label_list, max_seq_length, tokenizer) -> List[InputFeatures]: ...
def convert_single_example(ex_index, example, label_list, max_seq_length, tokenizer) -> InputFeatures: ...
def create_model(bert_config, is_training, input_ids, input_mask, segment_ids, labels, num_labels, use_one_hot_embeddings) -> Tuple[Any, Any, Any, Any]: ...
def file_based_convert_examples_to_features(examples, label_list, max_seq_length, tokenizer, output_file) -> None: ...
def file_based_input_fn_builder(input_file, seq_length, is_training, drop_remainder) -> Callable[[Any], Any]: ...
def input_fn_builder(features, seq_length, is_training, drop_remainder) -> Callable[[Any], Any]: ...
def main(_) -> None: ...
def model_fn_builder(bert_config, num_labels, init_checkpoint, learning_rate, num_train_steps, num_warmup_steps, use_tpu, use_one_hot_embeddings) -> Callable[[Any, Any, Any, Any], Any]: ...
