# (generated with --quick)

from typing import Any, Callable, TypeVar

doctest: module

T = TypeVar('T')

class Adapter:
    __doc__: str
    obj: Any
    def __getattr__(self, attr) -> Any: ...
    def __init__(self, obj: T, **adapted_methods: Callable) -> None: ...
    def original_dict(self) -> Any: ...

class Car:
    name: str
    def __init__(self) -> None: ...
    def make_noise(self, octane_level: int) -> str: ...

class Cat:
    name: str
    def __init__(self) -> None: ...
    def meow(self) -> str: ...

class Dog:
    name: str
    def __init__(self) -> None: ...
    def bark(self) -> str: ...

class Human:
    name: str
    def __init__(self) -> None: ...
    def speak(self) -> str: ...

def main() -> None: ...
