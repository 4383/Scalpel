# (generated with --quick)

import __future__
from typing import Any, Tuple, TypeVar

copy: module
division: __future__._Feature
np: module
print_function: __future__._Feature

_T0 = TypeVar('_T0')

class Neuroevolution:
    X: Any
    __doc__: str
    mutation_rate: Any
    population: Any
    population_size: Any
    y: Any
    def __init__(self, population_size, mutation_rate, model_builder) -> None: ...
    def _build_model(self, id) -> Any: ...
    def _calculate_fitness(self) -> None: ...
    def _crossover(self, parent1, parent2) -> Tuple[Any, Any]: ...
    def _inherit_weights(self, child, parent) -> None: ...
    def _initialize_population(self) -> None: ...
    def _mutate(self, individual: _T0, var = ...) -> _T0: ...
    def evolve(self, X, y, n_generations) -> Any: ...
    def model_builder(self) -> Any: ...
