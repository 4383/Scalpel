# (generated with --quick)

import __future__
import numpy
from typing import Any, List, Optional, Tuple, Type, Union

_POLY_TYPE: Type[list]
_RLE_TYPE: Type[dict]
absolute_import: __future__._Feature
division: __future__._Feature
mask_util: Any
np: module
print_function: __future__._Feature
unicode_literals: __future__._Feature

def flip_segms(segms, height, width) -> list: ...
def is_poly(segm) -> bool: ...
def mask_to_bbox(mask) -> Optional[numpy.ndarray]: ...
def polys_to_boxes(polys) -> Any: ...
def polys_to_mask(polygons, height, width) -> numpy.ndarray: ...
def polys_to_mask_wrt_box(polygons, box, M) -> numpy.ndarray: ...
def rle_mask_nms(masks, dets, thresh, mode = ...) -> list: ...
def rle_mask_voting(top_masks, all_masks, all_dets, iou_thresh, binarize_thresh, method = ...) -> Optional[list]: ...
def rle_masks_to_boxes(masks) -> Union[List[nothing], Tuple[Any, Any]]: ...
